"use strict";(self.webpackChunkkubedoop=self.webpackChunkkubedoop||[]).push([[781],{378:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>t,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"core-concepts/common-configuration-mechanisms/overrides","title":"Advanced: Configuration Overrides","description":"To ensure all products in the Kubedoop run quickly and securely, all products provide corresponding default configurations.","source":"@site/docs/core-concepts/common-configuration-mechanisms/overrides.md","sourceDirName":"core-concepts/common-configuration-mechanisms","slug":"/core-concepts/common-configuration-mechanisms/overrides","permalink":"/docs/core-concepts/common-configuration-mechanisms/overrides","draft":false,"unlisted":false,"editUrl":"https://github.com/zncdatadev/docs/docs/core-concepts/common-configuration-mechanisms/overrides.md","tags":[],"version":"current","lastUpdatedBy":"whg517","lastUpdatedAt":1732264107000,"frontMatter":{},"sidebar":"docs","previous":{"title":"Quick Start","permalink":"/docs/quick-start/installation"},"next":{"title":"Roles and Role Groups","permalink":"/docs/core-concepts/common-configuration-mechanisms/roles-and-role-groups"}}');var s=o(4848),d=o(8453);const a={},i="Advanced: Configuration Overrides",t={},l=[{value:"Configuration Overrides",id:"configuration-overrides",level:2},{value:"Environment Variable Overrides",id:"environment-variable-overrides",level:2},{value:"Command Line Argument Overrides",id:"command-line-argument-overrides",level:2},{value:"Pod Template Overrides",id:"pod-template-overrides",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"advanced-configuration-overrides",children:"Advanced: Configuration Overrides"})}),"\n",(0,s.jsx)(n.p,{children:"To ensure all products in the Kubedoop run quickly and securely, all products provide corresponding default configurations.\nHowever, sometimes you may need to override these default configurations. This document will introduce how to override configurations in the Kubedoop."}),"\n",(0,s.jsx)(n.p,{children:"All products support override mechanisms to provide a simple and flexible way to change program configurations, environment variables, and operator configurations."}),"\n",(0,s.jsx)(n.h2,{id:"configuration-overrides",children:"Configuration Overrides"}),"\n",(0,s.jsxs)(n.p,{children:["In roles and role groups, you can use the ",(0,s.jsx)(n.code,{children:"configOverrides"})," field to override default configurations."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: hdfs.kubedoop.dev/v1alpha1\nkind: HdfsCluster\nmetadata:\n  labels:\n    app.kubernetes.io/name: hdfscluster\n    app.kubernetes.io/instance: hdfscluster-sample\n    app.kubernetes.io/part-of: hdfs-operator\n    app.kubernetes.io/managed-by: kustomize\n    app.kubernetes.io/created-by: hdfs-operator\n  name: hdfscluster-sample\nspec:\n  image:\n    repository: qury.io/zncdata/hadoop\n    tag: 3.3.4\n  clusterConfig:\n    zookeeperDiscoveryZNode: sample-hdfs\n  nameNode:\n    configOverrides:\n      hdfs-site.xml:\n        fs.trash.interval: "5"\n    roleGroups:\n      default:\n        replicas: 2\n        configOverrides:\n          hdfs-site.xml:\n            dfs.namenode.num.checkpoints.retained: "3"\n'})}),"\n",(0,s.jsx)(n.p,{children:"In the above example, we defined:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"hdfs-site.xml"})," configuration of the namenode overrides ",(0,s.jsx)(n.code,{children:"fs.trash.interval"})," to 5."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"hdfs-site.xml"})," configuration of the namenode role group ",(0,s.jsx)(n.code,{children:"default"})," overrides ",(0,s.jsx)(n.code,{children:"dfs.namenode.num.checkpoints.retained"})," to 3."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"environment-variable-overrides",children:"Environment Variable Overrides"}),"\n",(0,s.jsxs)(n.p,{children:["In roles and role groups, you can use the ",(0,s.jsx)(n.code,{children:"envOverrides"})," field to override default environment variables."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: hdfs.kubedoop.dev/v1alpha1\nkind: HdfsCluster\nmetadata:\n  labels:\n    app.kubernetes.io/name: hdfscluster\n    app.kubernetes.io/instance: hdfscluster-sample\n    app.kubernetes.io/part-of: hdfs-operator\n    app.kubernetes.io/managed-by: kustomize\n    app.kubernetes.io/created-by: hdfs-operator\n  name: hdfscluster-sample\nspec:\n  image:\n    repository: qury.io/zncdatadev/hadoop\n    tag: 3.3.4\n  clusterConfig:\n    zookeeperDiscoveryZNode: sample-hdfs\n  nameNode:\n    configOverrides:\n      hdfs-site.xml:\n        fs.trash.interval: "5"\n    roleGroups:\n      default:\n        replicas: 2\n        envOverrides:\n          FOO: "bar"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the above example, by adding the ",(0,s.jsx)(n.code,{children:"envOverrides"})," field in the namenode role group ",(0,s.jsx)(n.code,{children:"default"}),", we override the value of the environment variable ",(0,s.jsx)(n.code,{children:"FOO"})," to ",(0,s.jsx)(n.code,{children:"bar"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"command-line-argument-overrides",children:"Command Line Argument Overrides"}),"\n",(0,s.jsxs)(n.p,{children:["In roles and role groups, you can use the ",(0,s.jsx)(n.code,{children:"commandOverrides"})," field to override default command line arguments."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: hdfs.kubedoop.dev/v1alpha1\nkind: HdfsCluster\nmetadata:\n  labels:\n    app.kubernetes.io/name: hdfscluster\n    app.kubernetes.io/instance: hdfscluster-sample\n    app.kubernetes.io/part-of: hdfs-operator\n    app.kubernetes.io/managed-by: kustomize\n    app.kubernetes.io/created-by: hdfs-operator\n  name: hdfscluster-sample\nspec:\n  image:\n    repository: qury.io/zncdatadev/hadoop\n    tag: 3.3.4\n  clusterConfig:\n    zookeeperDiscoveryZNode: sample-hdfs\n  nameNode:\n    roleGroups:\n      default:\n        replicas: 2\n        commandOverrides:\n          - "-Dfoo=bar"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the above example, by adding the ",(0,s.jsx)(n.code,{children:"commandOverrides"})," field in the namenode role group ",(0,s.jsx)(n.code,{children:"default"}),", we add the command line argument ",(0,s.jsx)(n.code,{children:"-Dfoo=bar"})," to the namenode's startup command."]}),"\n",(0,s.jsx)(n.h2,{id:"pod-template-overrides",children:"Pod Template Overrides"}),"\n",(0,s.jsxs)(n.p,{children:["In roles and role groups, you can use the ",(0,s.jsx)(n.code,{children:"podTemplateOverrides"})," field to override default pod templates."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: hdfs.kubedoop.dev/v1alpha1\nkind: HdfsCluster\nmetadata:\n  labels:\n    app.kubernetes.io/name: hdfscluster\n    app.kubernetes.io/instance: hdfscluster-sample\n    app.kubernetes.io/part-of: hdfs-operator\n    app.kubernetes.io/managed-by: kustomize\n    app.kubernetes.io/created-by: hdfs-operator\n  name: hdfscluster-sample\nspec:\n  image:\n    repository: qury.io/zncdatadev/hadoop\n    tag: 3.3.4\n  clusterConfig:\n    zookeeperDiscoveryZNode: sample-hdfs\n  nameNode:\n    podOverrides:\n      spec:\n        tolerations:\n          - key: "key"\n            operator: "Equal"\n            value: "value"\n            effect: "NoSchedule"\n    roleGroups:\n      default:\n        replicas: 2\n        podOverrides:\n          metadata:\n            labels:\n              foo: bar\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"podOverrides"})," is a field that overrides the default pod template through ",(0,s.jsx)(n.code,{children:"PodTemplateSpec"}),". Any valid ",(0,s.jsx)(n.code,{children:"PodTemplateSpec"})," configuration can be used in ",(0,s.jsx)(n.code,{children:"podOverrides"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["In the above example, we added ",(0,s.jsx)(n.code,{children:"tolerations"})," to the namenode role, and all namenode role groups will inherit this ",(0,s.jsx)(n.code,{children:"tolerations"}),".\nAt the same time, we added the ",(0,s.jsx)(n.code,{children:"metadata.labels"})," field to the namenode role group ",(0,s.jsx)(n.code,{children:"default"}),", and all namenode role groups will inherit this ",(0,s.jsx)(n.code,{children:"metadata.labels"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The levels of pod configuration overrides are as follows (from low to high):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"PodTemplateSpec generated by the operator"}),"\n",(0,s.jsx)(n.li,{children:"Role-level PodTemplateSpec"}),"\n",(0,s.jsx)(n.li,{children:"Role group-level PodTemplateSpec"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>i});var r=o(6540);const s={},d=r.createContext(s);function a(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);